<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miniproject.mappers.hboardMapper">

	<select id="getDateTime" resultType="string">
		select now()
	</select>

	<!-- 게시판의 모든 게시글을 번호 내림차순으로 정렬하여 가져오는 쿼리문 -->
	<select id="getAllHBoard"
		resultType="com.miniproject.model.HBoardVO">
		<!-- select * from hboard order by ref desc, refOrder asc -->
		select * from hboard where boardType = 'hboard' order by ref desc, refOrder asc limit
		#{startRowIndex}, #{viewPostCntperPage}
	</select>

	<!-- 새로운 게시글을 저장하는 쿼리문 -->
	<insert id="saveNewBoard">
		insert into hboard (title, content, writer,
		boardType)
		values
		(#{title}, #{content}, #{writer}, 'hboard')
	</insert>
	<!-- 저장된 글번호 가져오는 쿼리문 -->
	<select id="getMaxNo" resultType="int">
		select max(boardNo) from hboard
	</select>

	<!-- 업로드된 첨부파일을 저장하는 쿼리문 -->
	<insert id="saveUpFile">
		insert into
		boardupfiles(newFileName,originFileName,thumbFileName,ext,size,boardNo,base64Img)
		values(#{newFileName},#{originFileName},#{thumbFileName},#{ext},#{size},#{boardNo},#{base64Img})
	</insert>

	<select id="selectBoardByBoardNo" resultType="HBoardVo">
		select * from
		hboard where boardNo = #{boardNo}
	</select>


	<select id="selecyBoardUpfileByBoardNo"
		resultType="BoardUpFilesVODTO">
		select * from boardupfiles where boardNo = #{boardNo}
	</select>

	<!-- resultMap 연습 -->

	<resultMap type="com.miniproject.model.HBoardDTO"
		id="boardResultMapTest">
		<id column="boardNo" property="boardNo" javaType="int" />
		<result column="title" property="title" javaType="String" />
		<result column="content" property="content" javaType="String" />
		<result column="writer" property="writer" javaType="String" />

		<collection column="boardNo" property="fileList"
			ofType="BoardUpFilesVODTO" javaType="java.util.List"
			select="selecyBoardUpfileByBoardNo"></collection>
	</resultMap>

	<select id="selectResultmapTest" resultMap="boardResultMapTest">
		select boardNo,
		title, content, writer from hboard where boardNo = #{boardNo}
	</select>

	<!-- No번째 글의 hboard 모든 컬럼과, 해당글의 모든 업로드파일과, 작성자의 이름과 이메일을 가져오기위한 쿼리문 -->
	<resultMap type="com.miniproject.model.BoardDetailInfo"
		id="boardDetailInfoMap">
		<result column="boardNo" property="boardNo" javaType="int" />
		<result column="title" property="title" javaType="String" />
		<result column="content" property="content" javaType="String" />
		<result column="writer" property="writer" javaType="String" />
		<result column="postDate" property="postDate"
			javaType="java.sql.Timestamp" />
		<result column="readCount" property="readCount" javaType="int" />
		<result column="ref" property="ref" javaType="int" />
		<result column="step" property="step" javaType="int" />
		<result column="refOrder" property="refOrder" javaType="int" />
		<result column="isDelete" property="isDelete" javaType="String" />

		<result column="userName" property="userName" javaType="String" />
		<result column="email" property="email" javaType="String" />

		<collection property="fileList" ofType="BoardUpFilesVODTO"
			javaType="java.util.List">
			<result column="boardUpFileNo" property="boardUpFileNo"
				javaType="int" />
			<result column="newFileName" property="newFileName"
				javaType="String" />
			<result column="originFileName" property="originFileName"
				javaType="String" />
			<result column="thumbFileName" property="thumbFileName"
				javaType="String" />
			<result column="ext" property="ext" javaType="String" />
			<result column="size" property="size" javaType="long" />
			<result column="boardNo" property="boardNo" javaType="int" />
			<result column="base64Img" property="base64Img"
				javaType="String" />
		</collection>
	</resultMap>

	<select id="selectBoardDetailInfoByBoardNo"
		resultMap="boardDetailInfoMap">
		select h.boardNo, h.title, h.content, h.writer,
		h.postDate,
		h.readCount, h.ref, h.step, h.refOrder, h.isDelete, f.*,
		m.userName,
		m.email
		from
		hboard h left outer join boardupfiles f
		on h.boardNo =
		f.boardNo
		inner
		join member m
		on h.writer = m.userId
		where h.boardNo =
		#{boardNo} and boardType = 'hboard'
	</select>

	<!-- 조회수 처리 -->
	<!-- ipAddr의 유저가 boardNo글을 언제 조회했는지 날짜차이(단, 조회한 적이 없다면 -1반환) -->
	<select id="selectBoardDateDiff" parameterType="map"
		resultType="int">
		select
		ifnull(datediff(now(), (select readWhen from
		boardreadlog where
		readWho = #{readWho} and boardNo = #{boardNo})), -1)
		as datediff
	</select>

	<!-- BoardReadLog에 조회한 내역 저장 -->
	<insert id="saveBoardReadLog">
		insert into boardreadlog(readWho, boardNo)
		values(#{readWho},
		#{boardNo})
	</insert>

	<!-- 조회수 증가 -->
	<update id="updateReadCount">
		update hboard set readcount = readcount + 1 where
		boardNo = #{boardNo}
	</update>

	<!-- 조회한지 24시간이 지났다면, 아이피주소가 boardNo번 글을 읽은 시간을 테이블에 수정(update) -->
	<update id="updateBoardReadLog">
		update boardreadlog set readWhen = now()
		where readWho
		= #{readWho}
		and boardNo = #{boardNo}
	</update>

	<!-- 답글 처리 -->

	<update id="updateBoardRef">
		update hboard
		set ref = #{boardNo} where boardNo =
		#{boardNo}
	</update>

	<update id="updateBoardRefOrder">
		update hboard
		set refOrder = refOrder + 1
		where ref =
		#{ref}
		and refOrder > #{refOrder}
	</update>

	<!-- 답글 입력데이터와 함께 ref, step, refOrder 값 저장 -->

	<insert id="insertReplyBoard">
		insert into hboard(title, content, writer, ref, step,
		refOrder, boardType)
		values(#{title}, #{content}, #{writer}, #{ref}, #{step},
		#{refOrder}, 'hboard')
	</insert>

	<!-- 게시글 삭제 -->
	<!-- boardNo번 글을 삭제 (update) -->
	<update id="updateIsDelete">
		update hboard
		set isDelete = 'Y', title='', content=''
		where boardNo =
		#{boardNo}
	</update>
	<!-- boardupfiles테이블에서 삭제 -->
	<delete id="deleteBoardupfiles">
		delete from boardupfiles
		where boardNo = #{boardNo}
	</delete>

	<!-- 게시글 수정 관련 쿼리문 -->

	<update id="updateBoardByBoardNo">
		update hboard
		set title = #{title}, content =
		#{content}
		where boardNo = #{boardNo}
	</update>

	<delete id="deleteBoardUpFileByPK">
		delete from boardupfiles
		where boardUpFileNo =
		#{boardUpFileNo}
	</delete>

	<!-- 페이징 처리 관련 쿼리문 -->

	<select id="selectTotalCount" resultType="int">
		select count(*) from
		hboard
	</select>

	<!-- 게시판 검색 -->
	<select id="getSearchBoard"
		resultType="com.miniproject.model.HBoardVO">
		select * from hboard
		<choose>
			<when test="searchType == 'title'">
				where title like #{searchWord}
			</when>
			<when test="searchType == 'writer'">
				where writer like #{searchWord}
			</when>
			<when test="searchType == 'content'">
				where content like #{searchWord}
			</when>
		</choose>
		and boardType = 'hboard'
		order by ref desc, refOrder asc limit
		#{startRowIndex},
		#{viewPostCntperPage}
	</select>

	<select id="selectTotalCountWithSearchCriteria" resultType="int">
		select count(*) from hboard where
		<choose>
			<when test="searchType == 'title'">
				title like #{searchWord} and
			</when>
			<when test="searchType == 'writer'">
				writer like #{searchWord} and
			</when>
			<when test="searchType == 'content'">
				content like #{searchWord} and
			</when>
		</choose>
		boardType = 'hboard'
	</select>

</mapper>